// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PokeAPI.Data;

#nullable disable

namespace PokeAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220909145103_Update")]
    partial class Update
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PokeAPI.Models.Pokemon", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SpritesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpritesId");

                    b.ToTable("Pokemon");
                });

            modelBuilder.Entity("PokeAPI.Models.Sprites", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FrontDefault")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FrontShiny")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sprites");
                });

            modelBuilder.Entity("PokeAPI.Models.Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("PokemonId")
                        .HasColumnType("int");

                    b.Property<int>("Slot")
                        .HasColumnType("int");

                    b.Property<int?>("TypeNameId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PokemonId");

                    b.HasIndex("TypeNameId");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("PokeAPI.Models.TypeName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeNames");
                });

            modelBuilder.Entity("PokeAPI.Models.Pokemon", b =>
                {
                    b.HasOne("PokeAPI.Models.Sprites", "Sprites")
                        .WithMany()
                        .HasForeignKey("SpritesId");

                    b.Navigation("Sprites");
                });

            modelBuilder.Entity("PokeAPI.Models.Type", b =>
                {
                    b.HasOne("PokeAPI.Models.Pokemon", null)
                        .WithMany("Types")
                        .HasForeignKey("PokemonId");

                    b.HasOne("PokeAPI.Models.TypeName", "TypeName")
                        .WithMany()
                        .HasForeignKey("TypeNameId");

                    b.Navigation("TypeName");
                });

            modelBuilder.Entity("PokeAPI.Models.Pokemon", b =>
                {
                    b.Navigation("Types");
                });
#pragma warning restore 612, 618
        }
    }
}
